swagger: "2.0"
info:
  version: "0.0.1"
  title: Toeic
# during dev, should point to your local machine

host: localhost:8000
# host: 103.114.107.16:8005
# basePath prefixes all resource paths 
basePath: /api
# 
securityDefinitions:
  auth0:
    type: apiKey
    name: Authorization
    in: header
    description: "Authorization logged to application"
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
tags:
- name: "listeningQuestionPart1"
  description: "Everything about question in part 1"
- name: "listeningQuestionPart2"
  description: "Everything about question in part 2"
- name: "listeningQuestionPart3"
  description: "Everything about question in part 3"
- name: "listeningQuestionPart4"
  description: "Everything about question in part 4"
- name: "readingQuestionPart5"
  description: "Everything about question in part 5"
- name: "readingQuestionPart6"
  description: "Everything about question in part 6"
- name: "readingQuestionPart7"
  description: "Everything about question in part 7"
- name: "listeningQuestion"
- name: "readingQuestion"
- name: TestServer
produces:
  - application/json
paths:
  /questionsPart5:
    x-swagger-router-controller: reading_question
    post:
      tags:
        - readingQuestionPart5
      description: admin has logged in, and use import questions of part 5 in the exam. We have received the result include id, content_question, pos, part, level, position blank.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            question_content, answer, right_answer, level, part} .
          schema:
            $ref: '#/definitions/ImportBlankQuestion'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The user ID.
              question_content:
                type: string
              pos:
                type: integer
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              question_content: This is new app for practise toeic.
              pos: 2
              answers:
                  optA: a
                  optB: an
                  optC: one
                  optD: two
              level: 1
              part: 5
              _id: 5c9c86aef41bf82ed47ac679
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart5/{questionId}:
    x-swagger-router-controller: reading_question
    get:
      description: Returns this question by id record
      operationId: getQuestionById
      tags:
        - readingQuestionPart5
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              question_content:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              question_content: This is __ new app for practise toeic.
              answers:
                  optA: a
                  optB: an
                  optC: one
                  optD: two
              right_answer: optA
              explain: We need a article in front of Noun
              level: 1
              part: 5
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - readingQuestionPart5
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              question_content:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              question_content: This is __ new app for practise toeic.
              answers:
                  optA: a
                  optB: an
                  optC: one
                  optD: two
              right_answer: optA
              explain: We need a article in front of Noun
              level: 1
              part: 5
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - readingQuestionPart5
      description: admin has logged in, and delete question by id.
      operationId: deleteQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            $ref: "#/definitions/SuccessResponse"
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart6:
    x-swagger-router-controller: reading_question
    post:
      tags:
        - readingQuestionPart6
      description: admin has logged in, and use import paragraph has blank and array options in the exam.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is an array object question with question content is paragraph have a blank need to complete, and list answer, right_answer, explain.
          schema:
            $ref: '#/definitions/ImportParagraphQuestionPart6'     # <----------
      responses:
        "200":
          description: Return a list id and status questions have imported in DB
          schema:
            type: object
            properties:
              paragraphs:
                type: object
                properties:
                  _id:
                    type: integer
                    description: The record ID.
                  part: 
                    type: integer
              questions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    level: 
                      type: string
            example: #sample object
              paragraphs:
                part: 6
                _id: 5ca263d039b6666db8e6e4a0
              questionObjects:
                - id: 5cb05fef3c34db1f9b6e7736
                  level: 1
                - id: 5cb05fef3c34db1f9b6e7734
                  level: 1
                - id: 5cb05fef3c34db1f9b6e7736
                  level: 1
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart6/{questionId}:
    x-swagger-router-controller: reading_question
    get:
      description: Returns this question by id record
      operationId: getParagraphById
      tags:
        - readingQuestionPart6
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string
              id_paragraph:
                type: string
              pos_in_paragraphs:
                type: integer
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              _id: 5cb21291725335380159e938
              answers:
                optA: value
                optB: valued
                optC: valid
                optD: validate
              right_answer: optB
              explain: Choice A is a noun.
                        Choice C is an adjective that does not fit logically in context. This letter is from a stationery store, so anyone can purchase items there. Something that is "valid" is allowed or permitted.
                        Choice D is a verb.
              id_paragraph: 5cb21291725335380159e937
              pos_in_paragraphs: 3
              level: 1
              part: 6
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - readingQuestionPart6
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string
              id_paragraph:
                type: string
              pos_in_paragraphs:
                type: integer
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              _id: 5cb21291725335380159e938
              answers:
                optA: Protests in Sydney
                optB: Racial unrest
                optC: Severely injured police officers
                optD: Fair treatment by police
              right_answer: optA
              explain: Can be null
              id_paragraph: 5cb21291725335380159e937
              pos_in_paragraphs: 2
              level: 1
              part: 6
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /paragraphPart7:
    x-swagger-router-controller: paragraph_part7
    post:
      tags:
        - readingQuestionPart7
      description: admin has logged in, and use import paragraphs in part 7.
      operationId: importParagraph
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object include paragraphs we need to import.
          schema:
            $ref: '#/definitions/ImportParagraphPart7'     # <----------
      responses:
        "200":
          description: Return a id record pf paragraphs have imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              level: 1
              part: 7
              _id: 5c9c86aef41bf82ed47ac679
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart7:
    x-swagger-router-controller: reading_question
    post:
      tags:
        - readingQuestionPart7
      description: admin has logged in, and use import question of the paragraph have imported in part 7, with type paragraph blank or double paragraph
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object include question, options, right answer, level, part, id_paragraph and explain right answer we need to import.
          schema:
            $ref: '#/definitions/ImportQuestionPart7'     # <----------
      responses:
        "200":
          description: Return a id record question have imported in DB
          schema:
            type: object
            properties:
              paragraph:
                type: object
                properties:
                  _id:
                    type: integer
                    description: The record ID.
                  level: 
                    type: integer
                  part: 
                    type: integer
              questionObjects:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    question: 
                      type: string
            example: #sample object
              paragraph:
                level: 1
                part: 7
                _id: 5cb21291725335380159e937
              questionObjects:
                - id: 5cb21291725335380159e938
                  question: What is the main topic of the article?
                - id: 5cb21291725335380159e939
                  question: What do police officials fear might happen?
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart7/{questionId}:
    x-swagger-router-controller: reading_question
    get:
      description: Returns this question by id record
      operationId: getParagraphById
      tags:
        - readingQuestionPart7
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              question_content:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string
              id_paragraph:
                type: string    
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              _id: 5cb21291725335380159e938
              question_content: What is the main topic of the article?
              answers:
                optA: Protests in Sydney
                optB: Racial unrest
                optC: Severely injured police officers
                optD: Fair treatment by police
              right_answer: optA
              explain: Can be null
              id_paragraph: 5cb21291725335380159e937
              level: 1
              part: 7
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - readingQuestionPart7
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              question_content:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string
              id_paragraph:
                type: string    
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              _id: 5cb21291725335380159e938
              question_content: What is the main topic of the article?
              answers:
                optA: Protests in Sydney
                optB: Racial unrest
                optC: Severely injured police officers
                optD: Fair treatment by police
              right_answer: optA
              explain: Can be null
              id_paragraph: 5cb21291725335380159e937
              level: 1
              part: 7
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart1:
    x-swagger-router-controller: listening_question
    post:
      tags:
        - listeningQuestionPart1
      description: admin has logged in, and use import questions of part 1 in the exam.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            image_link, answer, right_answer, level, part} .
          schema:
            $ref: '#/definitions/ImportListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              level: 1
              part: 1
              _id: 5ca263d039b6666db8e6e4a0
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart1/{questionId}:
    x-swagger-router-controller: listening_question
    get:
      description: Returns this question by id record
      operationId: getQuestionById
      tags:
        - listeningQuestionPart1
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: public/image/part1/question_image1
              answers: 
                optA: public/audio/part1/question_audio1
                optB: public/audio/part1/question_audio2
                optC: public/audio/part1/question_audio3
                optD: public/audio/part1/question_audio4
              right_answer: optA
              explain: No Explain
              level: 1
              part: 1
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - listeningQuestionPart1
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: public/image/part1/question_image1
              answers: 
                optA: public/audio/part1/question_audio1
                optB: public/audio/part1/question_audio2
                optC: public/audio/part1/question_audio3
                optD: public/audio/part1/question_audio4
              right_answer: optA
              explain: No Explain
              level: 1
              part: 1
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - listeningQuestionPart1
      description: admin has logged in, and delete question by id.
      operationId: deleteQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            $ref: "#/definitions/SuccessResponse"
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart2:
    x-swagger-router-controller: listening_question
    post:
      tags:
        - listeningQuestionPart2
      description: admin has logged in, and use import questions of part 2 in the exam.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            audio_link, answer, right_answer, level, part, explain } .
          schema:
            $ref: '#/definitions/ImportListeningQuestionPart2'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              level: 1
              part: 2
              _id: 5ca263d039b6666db8e6e4a0
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart2/{questionId}:
    x-swagger-router-controller: listening_question
    get:
      description: Returns this question by id record
      operationId: getQuestionById
      tags:
        - listeningQuestionPart2
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              audio_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: public/audio/part2/question_audio2
              answers: 
                optA: public/audio/part1/answer_audio1
                optB: public/audio/part1/answer_audio2
                optC: public/audio/part1/answer_audio3
                optD: public/audio/part1/answer_audio4
              right_answer: optA
              explain: Can be null
              level: 1
              part: 2
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - listeningQuestionPart2
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: public/audio/part2/question_image1
              answers: 
                optA: public/audio/part2/question_audio1
                optB: public/audio/part2/question_audio2
                optC: public/audio/part2/question_audio3
                optD: public/audio/part2/question_audio4
              right_answer: optA
              explain: No Explain
              level: 1
              part: 2
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - listeningQuestionPart2
      description: admin has logged in, and delete question by id.
      operationId: deleteQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            $ref: "#/definitions/SuccessResponse"
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart3:
    x-swagger-router-controller: listening_question
    post:
      tags:
        - listeningQuestionPart3
      description: admin has logged in, and use import questions of part 3 in the exam.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            dialogue_link, questionObjects, answer, right_answers, level, part } .
          schema:
            $ref: '#/definitions/ImportListeningQuestionPart3'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              dialogue:
                type: object
                properties:
                  _id:
                    type: integer
                    description: The record ID.
                  level: 
                    type: integer
                  part: 
                    type: integer
              questionObjects:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    question: 
                      type: string
            example: #sample object
              dialogue:
                level: 1
                part: 3
                _id: 5ca263d039b6666db8e6e4a0
              questionObjects:
                - id: 5cb05fef3c34db1f9b6e7736
                  question: Who most likely is Mr. Metts?
                - id: 5cb05fef3c34db1f9b6e7734
                  question: Who most likely is Mr. Metts? 
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart3/{questionId}:
    x-swagger-router-controller: listening_question
    get:
      description: Returns this question by id record
      operationId: getParagraphById
      tags:
        - listeningQuestionPart3
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              question_content:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string
              id_dialogue:
                type: string   
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object 
              id: 5cb490df7a69701a2e53b161 
              question_content: Who most likely is Mr. Metts?_update
              answers: 
                optA: Emily's boss
                optB: Emily's colleague
                optC: Emily's teacher
                optD: Emily's lawyer
              right_answer: optA
              explain: Can be null
              id_dialogue: 5cb490de7a69701a2e53b160
              part: 3,
              level: 1
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - listeningQuestionPart3
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: public/audio/part2/question_image1
              answers: 
                optA: public/audio/part2/question_audio1
                optB: public/audio/part2/question_audio2
                optC: public/audio/part2/question_audio3
                optD: public/audio/part2/question_audio4
              right_answer: optA
              explain: No Explain
              level: 1
              part: 1
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart4:
    x-swagger-router-controller: listening_question
    post:
      tags:
        - listeningQuestionPart4
      description: admin has logged in, and use import questions of part 3 in the exam.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            dialogue_link, questionObjects, answer, right_answers, level, part } .
          schema:
            $ref: '#/definitions/ImportListeningQuestionPart3'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              dialogue:
                type: object
                properties:
                  _id:
                    type: integer
                    description: The record ID.
                  level: 
                    type: integer
                  part: 
                    type: integer
              questionObjects:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    question: 
                      type: string
            example: #sample object
              dialogue:
                level: 1
                part: 4
                _id: 5ca263d039b6666db8e6e4a0
              questionObjects:
                - id: 5cb05fef3c34db1f9b6e7736
                  question: Who most likely is Mr. Metts?
                - id: 5cb05fef3c34db1f9b6e7734
                  question: Who most likely is Mr. Metts? 
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart4/{questionId}:
    x-swagger-router-controller: listening_question
    get:
      description: Returns this question by id record
      operationId: getParagraphById
      tags:
        - listeningQuestionPart4
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              question_content:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string
              id_dialogue:
                type: string   
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              _id: 5cb15f643e61721ec8402e5c
              question_content: Who most likely is Mr. Metts?
              answers:
                optA: Emily's boss
                optB: Emily's colleague
                optC: Emily's teacher
                optD: Emily's lawyer
              right_answer: optA
              explain: Can be null
              id_dialogue: 5cb15f643e61721ec8402e5a
              part: 4
              level: 1
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - listeningQuestionPart4
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: public/audio/part2/question_image1
              answers: 
                optA: public/audio/part2/question_audio1
                optB: public/audio/part2/question_audio2
                optC: public/audio/part2/question_audio3
                optD: public/audio/part2/question_audio4
              right_answer: optA
              explain: No Explain
              level: 1
              part: 1
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /listeningQuestion:
    x-swagger-router-controller: listening_question
    get:
      description: Returns all question
      operationId: getAll
      tags:
        - listeningQuestion
      security:
        - auth0: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: limit record return
        - in: query
          name: page
          type: integer
          description: page you need to get
        - in: query
          name: part
          type: integer
          description: quesition of part you want to get
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              _id:
                type: integer
              audio_link:
                type: string
              dialogue_id:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              - _id: 5ca5cf9625b3a91485d29ef9
                audio_link: public/audio/part2/question_audio2
                dialogue_id: 5ca263d039b6666db8e6e4a0
                answers:
                    optA: public/audio/part2/question_audio1
                    optB: public/audio/part2/question_audio2
                    optC: public/audio/part2/question_audio3
                    optD: public/audio/part2/question_audio4
                right_answer: optA
                explain: Can be null
                level: 1
                part: 3
              - _id: 5ca5cfd621a34914ef9a2f38
                audio_link: public/audio/part2/question_audio3
                dialogue_id: 5ca263d039b6666db8e6e4a0
                answers:
                    optA: public/audio/part2/question_audio1
                    optB: public/audio/part2/question_audio2
                    optC: public/audio/part2/question_audio3
                    optD: public/audio/part2/question_audio4
                right_answer: optA
                explain: Can be null
                level: 1
                part: 3
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /readingQuestion:
    x-swagger-router-controller: reading_question
    get:
      description: Returns all question
      operationId: getAll
      tags:
        - readingQuestion
      security:
        - auth0: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: limit record return
        - in: query
          name: page
          type: integer
          description: page you need to get
        - in: query
          name: part
          type: integer
          description: quesition of part you want to get
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              _id:
                type: integer
              audio_link:
                type: string
              dialogue_id:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              - _id: 5ca5cf9625b3a91485d29ef9
                audio_link: public/audio/part2/question_audio2
                dialogue_id: 5ca263d039b6666db8e6e4a0
                answers:
                    optA: public/audio/part2/question_audio1
                    optB: public/audio/part2/question_audio2
                    optC: public/audio/part2/question_audio3
                    optD: public/audio/part2/question_audio4
                right_answer: optA
                explain: Can be null
                level: 1
                part: 3
              - _id: 5ca5cfd621a34914ef9a2f38
                audio_link: public/audio/part2/question_audio3
                dialogue_id: 5ca263d039b6666db8e6e4a0
                answers:
                    optA: public/audio/part2/question_audio1
                    optB: public/audio/part2/question_audio2
                    optC: public/audio/part2/question_audio3
                    optD: public/audio/part2/question_audio4
                right_answer: optA
                explain: Can be null
                level: 1
                part: 3
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /tests:
    x-swagger-router-controller: test
    get:
      description: Returns all test, this api is used by admin
      operationId: getAll
      tags:
        - TestServer
      security:
        - auth0: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: limit record return
        - in: query
          name: page
          type: integer
          description: page you need to get
        - in: query
          name: level
          type: integer
          description: filter the test by level
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              _id:
                type: integer
              user_complete:
                type: number 
              createAt:
                type: string
              level: 
                type: integer
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /test:
    x-swagger-router-controller: test
    get:
      description: Returns the test by level of user and ordinal of the test.
      operationId: getTheTestByLevelAndOrdinalTest
      tags:
        - TestServer
      security:
        - auth0: []
      parameters:
        - in: query
          name: level
          type: integer
          description: current level of user
        - in: query
          name: ordinalOfTest
          type: integer
          description: ordinal of test
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              questions:
                type: object
                properties:
                  part_1:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_2:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_3:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_4:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_5:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_6:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_7:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
              level: 
                type: integer
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /test{testId}:
    x-swagger-router-controller: test
    get:
      description: Returns the test by level of user and ordinal of the test.
      operationId: getTheTestById
      tags:
        - TestServer
      security:
        - auth0: []
      parameters:
        - in: path
          name: testId
          type: string
          required: true
          description: id of test
      responses:
        "200":
          description: Return the test
          schema:
            properties:
              questions:
                type: object
                properties:
                  part_1:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_2:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_3:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_4:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_5:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_6:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_7:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
              level: 
                type: integer
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /miniTest:
    x-swagger-router-controller: test
    get:
      description: Returns the test by level of user and ordinal of the test.
      operationId: getMiniTest
      tags:
        - TestServer
      security:
        - auth0: []
      # parameters:
        # - in: query
        #   name: level
        #   type: integer
        #   description: current level of user
        # - in: query
        #   name: ordinalOfTest
        #   type: integer
        #   description: ordinal of test
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              questions:
                type: object
                properties:
                  part_1:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_2:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_3:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_4:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_5:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_6:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
                  part_7:
                    type: array
                    items:
                      type: object
                      properties:
                        content:
                          type: string
              level: 
                type: integer
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /submitTheTest:
    x-swagger-router-controller: test
    post:
      description: submit result of the test, server return your scores
      operationId: getResultTest
      tags:
        - TestServer
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: post listening_scores and reading_scores
          schema:
            properties:
              correct_listening:
                type: integer
              correct_reading: 
                type: integer
              user_id:
                type: string
              test_id:
                type: string
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              result:
                type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /submitMiniTest:
    x-swagger-router-controller: test
    post:
      description: submit result of the test, server return your scores
      operationId: getResultMiniTest
      tags:
        - TestServer
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: post listening_scores and reading_scores
          schema:
            properties:
              correct_listening:
                type: integer
              correct_reading: 
                type: integer
              user_id:
                type: string
              test_id:
                type: string
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              result:
                type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  ErrorResponse:
    required:
      - messageError
    properties:
      messageError:
        type: string
  SuccessResponse:
    type: object
    required: 
      - message
    properties:
      message:
        type: string
  ImportBlankQuestion:
    type: object
    required:
      - question_content
      - answers
      - right_answer
      - level
      - part
    properties:
      question_content:
        type: string
      answers:
        type: object
        properties:
          optA:
            type: string
          optB:
            type: string
          optC:
            type: string
          optD:
            type: string
      right_answer: 
        type: string
      explain:
        type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      question_content: This is __ new app for practise toeic.
      answers:
          optA: a
          optB: an
          optC: one
          optD: two
      right_answer: optA
      explain: We need a article in front of Noun
      level: 1
      part: 5
  ImportParagraphQuestionPart6:
    type: object
    properties:
      questions:
        type: array
        items:
          type: object
          properties:
            paragraph:
              type: string
            answers:
              type: object
              properties:
                optA:
                  type: string
                optB:
                  type: string
                optC:
                  type: string
                optD:
                  type: string
            right_answer: 
              type: string
            explain:
              type: string      
      part: 
        type: integer
      level:
        type: integer
    example: #sample object
      questions:
        - paragraph: "Sid's Stationery
                      2 Smythe St, Toronto, Canada M1B 5T6
                      Tel:(416) 295-1725

                      December 1st, 20--

                      Kerry Michaels
                      1 Stevens Rd.
                      Scarborough, Ontario, Canada M1E 4H7

                      Dear Ms. Michaels:

                      Holiday Sale

                      Seasons Greetings. As a _______ customer, we wanted you to be among the first to know about our upcoming holiday sale.
                      All craft paper, specialty printer paper, and decorative envelopes will be reduced by 50% for the month of December."
          answers:
              optA: value
              optB: valued
              optC: valid
              optD: validate
          right_answer: optB
          explain: Choice A is a noun.
                    Choice C is an adjective that does not fit logically in context. This letter is from a stationery store, so anyone can purchase items there. Something that is "valid" is allowed or permitted.
                    Choice D is a verb.
        - paragraph: "As per tradition at Sid's Stationery, we will be having a Christmas raffle.
                      This year the grand prize is a 2-night stay for two at the Meridian Inn _______ Toronto Island.
                      The winner will receive a free double occupancy stay in the penthouse suite as well as a free dinner on the moonlit patio."
          answers:
              optA: through
              optB: on
              optC: over
              optD: at
          right_answer: optB
          explain: Choice A is a preposition that indicates going from one end to another. (I went through a tunnel.)
                    Choice C is a preposition used when one is passing something to reach another thing. (I went over the bridge.)
                    Choice D is a preposition used with times or specific venues. (I went at ten o'clock. We met at the mall.)
        - paragraph: "Money from ticket sales will be _______ to The Family Foundation, a local organization that provides food and clothing to those who need it most this Christmas."
          answers:
              optA: purchased
              optB: donated
              optC: funded
              optD: collected
          right_answer: optB
          explain: Choices A and C are incorrect because you can't "purchase" or "fund" money.
                    Choice D is incorrect because "collected" is followed by the word "from" not "to".
        - paragraph: We look forward to seeing you this Christmas season.

                      Yours truly,

                      Sid and Sandy Chester
      part: 6
      level: 1
  ImportParagraphPart7:
    type: object
    required:
      - paragraphs
      - level
      - part
    properties:
      paragraphs:
        type: array
        items:
          type: string
      level:
        type: integer
      part:
        type: integer
    example: #sample object
      paragraphs: [
        "More than 50,000 electronics retailers and distributors are expected at the McCormick Convention Center in Chicago starting next Saturday. Some 1,300 manufacturers from more than 35 countries will exhibit their latest high-technology equipment, including industrial equipment, office machines, and household appliances. 
        The new products won't appear on retailers' shelves until next fall, but show attendees will be able to purchase them during the show at special prices.
        Highlights of the show include the following:
        1. Demonstrations of robots designed for household use. Watch robots perform everyday household chores. Each day, models from a different group of manufacturers will be shown. Hall of Industry, 3:00-5.00 P.M. daily.",
      ]
      level: 1
      part: 7
  ImportQuestionPart7:
    type: object
    required:
      - paragraph
      - type
      - questionObjects
      - level
      - part
    properties:
      paragraph:
        type: string
      type:
        type: integer
      questionObjects:
        type: array
        items:
          type: object
          properties:
            question_content:
              type: string
            answers:
              type: object
              properties:
                optA:
                  type: string
                optB:
                  type: string
                optC:
                  type: string
                optD:
                  type: string
            right_answer: 
              type: string
            explain:
              type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      paragraph: Melbourne - There has been an increase in racial unrest in this city, as hundreds of Australian Aboriginal people have protested what they say is unfair treatment by police.
                Some of these protests have turned violent, and while no major injuries have been reported, police officials say that the situation has been increasing in severity over the last week, and they fear that there may be more severe injuries among both police and protestors if the trend continues.
      type: 1
      questionObjects:
        - question_content: What is the main topic of the article?
          answers: 
            optA: Protests in Sydney
            optB: Racial unrest
            optC: Severely injured police officers
            optD: Fair treatment by police
          right_answer: optA,
          explain: Can be null
        - question_content: What do police officials fear might happen?
          answers: 
            optA: The protests may not continue.
            optB: The protestors may claim they are being treated unfairly.
            optC: There may be fatal injuries in the future.
            optD: The protestors may become better.
          right_answer: optA,
          explain: Can be null
      level: 1
      part: 7
  ImportListeningQuestionPart1:
    type: object
    required:
      - image_link
      - audio_link
      - right_answer
      - level
      - part
    properties:
      image_link:
        type: string  
      audio_link:
        type: string
      answers:
        type: object
        properties:
          optA:
            type: string
          optB:
            type: string
          optC:
            type: string
          optD:
            type: string
      right_answer: 
        type: string
      explain:
        type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      image_link: public/image/part1/question_image1
      audio_link: public/image/part1/question_image1
      answers:
          optA: public/audio/part1/question_audio1
          optB: public/audio/part1/question_audio2
          optC: public/audio/part1/question_audio3
          optD: public/audio/part1/question_audio4
      right_answer: optA
      explain: No Explain
      level: 1
      part: 1
  updateListeningQuestionPart1:
    type: object
    properties:
      answers:
        type: object
        properties:
          optA:
            type: string
          optC:
            type: string
    example: #sample object
      answers:
          optA: public/audio/part1/updated
          optC: public/audio/part1/updated
  ImportListeningQuestionPart2:
    type: object
    required:
      - audio_link
      - right_answer
      - level
      - part
    properties:
      audio_link:
        type: string
      answers:
        type: object
        properties:
          optA:
            type: string
          optB:
            type: string
          optC:
            type: string
          optD:
            type: string
      right_answer: 
        type: string
      explain:
        type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      audio_link: public/audio/part2/question_audio2
      answers:
          optA: public/audio/part2/question_audio1
          optB: public/audio/part2/question_audio2
          optC: public/audio/part2/question_audio3
          optD: public/audio/part2/question_audio4
      right_answer: optA
      explain: Can be null
      level: 1
      part: 2
  ImportListeningQuestionPart3:
    type: object
    required:
      - dialogue_link
      - questionObjects
      - level
      - part
    properties:
      dialogue_link:
        type: string
      questionObjects:
        type: array
        items:
          type: object
          properties:
            question_content:
              type: string
            answers:
              type: object
              properties:
                optA:
                  type: string
                optB:
                  type: string
                optC:
                  type: string
                optD:
                  type: string
            right_answer: 
              type: string
            explain:
              type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      dialogue_link: public/audio/part3/dialogue_01
      questionObjects:
        - question_content: Who most likely is Mr. Metts?
          answers: 
            optA: Emily's boss
            optB: Emily's colleague
            optC: Emily's teacher
            optD: Emily's lawyer
          right_answer: optA,
          explain: Can be null
        - question_content: Who most likely is Mr. Metts?
          answers: 
            optA: Emily's boss
            optB: Emily's colleague
            optC: Emily's teacher
            optD: Emily's lawyer
          right_answer: optA,
          explain: Can be null
        - question_content: Who most likely is Mr. Metts?
          answers: 
            optA: Emily's boss
            optB: Emily's colleague
            optC: Emily's teacher
            optD: Emily's lawyer
          right_answer: optA,
          explain: Can be null
      level: 1
      part: 3