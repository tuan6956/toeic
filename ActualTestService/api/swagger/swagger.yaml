swagger: "2.0"
info:
  version: "0.0.1"
  title: Toeic
# during dev, should point to your local machine
# host: 139.59.190.205:8000

host: localhost:8000
# basePath prefixes all resource paths 
basePath: /api
# 
securityDefinitions:
  auth0:
    type: apiKey
    name: Authorization
    in: header
    description: "Authorization logged to application"
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
tags:
- name: "listeningQuestionPart1"
  description: "Everything about question in part 1"
- name: "listeningQuestionPart2"
  description: "Everything about question in part 2"
- name: "listeningQuestionPart3"
  description: "Everything about question in part 3"
- name: "listeningQuestionPart4"
  description: "Everything about question in part 4"
- name: "readingQuestionPart5"
  description: "Everything about question in part 5"
- name: "readingQuestionPart6"
  description: "Everything about question in part 6"
- name: "readingQuestionPart7"
  description: "Everything about question in part 7"

produces:
  - application/json
paths:
  /blankQuestion:
    x-swagger-router-controller: blank_question_part5
    post:
      tags:
        - readingQuestionPart5
      description: admin has logged in, and use import questions of part 5 in the exam. We have received the result include id, content_question, pos, part, level, position blank.
      operationId: importBlankQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            question_content, answer, right_answer, level, part} .
          schema:
            $ref: '#/definitions/ImportBlankQuestion'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The user ID.
              question_content:
                type: string
              pos:
                type: integer
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              question_content: This is new app for practise toeic.
              pos: 2
              answers:
                  optA: a
                  optB: an
                  optC: one
                  optD: two
              level: 1
              part: 5
              _id: 5c9c86aef41bf82ed47ac679
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns all question
      operationId: getAll
      tags:
        - readingQuestionPart5
      security:
        - auth0: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: limit record return
        - in: query
          name: page
          type: integer
          description: page you need to get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MessageResp"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /blankParagraphandQuestion:
    x-swagger-router-controller: questions_reading_test
    post:
      tags:
        - readingQuestionPart6
      description: admin has logged in, and use import paragraph has blank and array options in the exam.
      operationId: importParagraphQuestionPart6
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object include blank paragraph, list options, list right answer, level of paragraph, and part.
          schema:
            $ref: '#/definitions/ImportParagraphQuestionPart6'     # <----------
      responses:
        "200":
          description: Return a paragraph object and list options have imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              blank_paragraph:
                type: string
              list_position:
                type: array
                items:
                  type: integer
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              blank_paragraph: This is new app for practise toeic.
              list_position: [7, 16]
              level: 1
              part: 6
              _id: 5c9c86aef41bf82ed47ac679
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /paragraphPart7:
    x-swagger-router-controller: paragraph_part7
    post:
      tags:
        - readingQuestionPart7
      description: admin has logged in, and use import paragraphs in part 7.
      operationId: importParagraph
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object include paragraphs we need to import.
          schema:
            $ref: '#/definitions/ImportParagraphPart7'     # <----------
      responses:
        "200":
          description: Return a id record pf paragraphs have imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              level: 1
              part: 7
              _id: 5c9c86aef41bf82ed47ac679
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart7:
    x-swagger-router-controller: question_part7
    post:
      tags:
        - readingQuestionPart7
      description: admin has logged in, and use import question of the paragraph have imported in part 7.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object include question, options, right answer, level, part, id_paragraph and explain right answer we need to import.
          schema:
            $ref: '#/definitions/ImportQuestionPart7'     # <----------
      responses:
        "200":
          description: Return a id record question have imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              level: 1
              part: 7
              _id: 5c9c86aef41bf82ed47ac679
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart1:
    x-swagger-router-controller: listening_part1
    post:
      tags:
        - listeningQuestionPart1
      description: admin has logged in, and use import questions of part 1 in the exam.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            image_link, answer, right_answer, level, part} .
          schema:
            $ref: '#/definitions/ImportListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              level: 1
              part: 1
              _id: 5ca263d039b6666db8e6e4a0
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns all question
      operationId: getAll
      tags:
        - listeningQuestionPart1
      security:
        - auth0: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: limit record return
        - in: query
          name: page
          type: integer
          description: page you need to get
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              - _id: 5ca37b32d7e9b81653ad1dc9
                image_link: pulic/image/part1/question_image1
                answers: 
                  optA: public/audio/part1/question_audio1
                  optB: public/audio/part1/question_audio2
                  optC: public/audio/part1/question_audio3
                  optD: public/audio/part1/question_audio4
                right_answer: optA
                explain: No Explain
                level: 1
                part: 1
              - _id: 5ca37b32d7e9b81653ad1dc9
                image_link: pulic/image/part1/question_image1
                answers: 
                  optA: public/audio/part1/question_audio1
                  optB: public/audio/part1/question_audio2
                  optC: public/audio/part1/question_audio3
                  optD: public/audio/part1/question_audio4
                right_answer: optA
                explain: No Explain
                level: 1
                part: 1
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart1/{questionId}:
    x-swagger-router-controller: listening_part1
    get:
      description: Returns this question by id record
      operationId: getQuestionById
      tags:
        - listeningQuestionPart1
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
          description: id question
      responses:
        "200":
          description: Return the question you request
          schema:
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: pulic/image/part1/question_image1
              answers: 
                optA: public/audio/part1/question_audio1
                optB: public/audio/part1/question_audio2
                optC: public/audio/part1/question_audio3
                optD: public/audio/part1/question_audio4
              right_answer: optA
              explain: No Explain
              level: 1
              part: 1
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - listeningQuestionPart1
      description: admin has logged in, and update content of question.
      operationId: updateQuestion
      security:
        - auth0: []
      parameters:
        - in: path
          name: questionId
          type: string
          required: true
        - in: body
          name: body
          description: Add field you need update in this question.
          schema:
            $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
      responses:
        "200":
          description: Return a question object has updated in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
              image_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              id: 5ca37b32d7e9b81653ad1dc9
              image_link: pulic/image/part1/question_image1
              answers: 
                optA: public/audio/part1/question_audio1
                optB: public/audio/part1/question_audio2
                optC: public/audio/part1/question_audio3
                optD: public/audio/part1/question_audio4
              right_answer: optA
              explain: No Explain
              level: 1
              part: 1
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /questionsPart2:
    x-swagger-router-controller: listening_part2
    post:
      tags:
        - listeningQuestionPart2
      description: admin has logged in, and use import questions of part 2 in the exam.
      operationId: importQuestion
      security:
        - auth0: []
      parameters:
        - in: body
          name: body
          description: parameters is json object such as {
            image_link, answer, right_answer, level, part} .
          schema:
            $ref: '#/definitions/ImportListeningQuestionPart2'     # <----------
      responses:
        "200":
          description: Return a question object has imported in DB
          schema:
            type: object
            properties:
              _id:
                type: integer
                description: The record ID.
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              level: 1
              part: 1
              _id: 5ca263d039b6666db8e6e4a0
        "401":
          description: Import Fail
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Import Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns all question
      operationId: getAll
      tags:
        - listeningQuestionPart2
      security:
        - auth0: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: limit record return
        - in: query
          name: page
          type: integer
          description: page you need to get
      responses:
        "200":
          description: Return all records you request by paging
          schema:
            properties:
              _id:
                type: integer
              audio_link:
                type: string
              answers:
                type: object
                properties:
                  optA:
                    type: string
                  optB:
                    type: string
                  optC:
                    type: string
                  optD:
                    type: string
              right_answer: 
                type: string
              explain:
                type: string      
              level: 
                type: integer
              part: 
                type: integer
            example: #sample object
              - _id: 5ca5cf9625b3a91485d29ef9
                audio_link: pulic/audio/part2/question_audio2
                answers:
                    optA: public/audio/part2/question_audio1
                    optB: public/audio/part2/question_audio2
                    optC: public/audio/part2/question_audio3
                    optD: public/audio/part2/question_audio4
                right_answer: optA
                explain: Can be null
                level: 1
                part: 1
              - _id: 5ca5cfd621a34914ef9a2f38
                audio_link: pulic/audio/part2/question_audio3
                answers:
                    optA: public/audio/part2/question_audio1
                    optB: public/audio/part2/question_audio2
                    optC: public/audio/part2/question_audio3
                    optD: public/audio/part2/question_audio4
                right_answer: optA
                explain: Can be null
                level: 1
                part: 1
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  # /questionsPart1/{questionId}:
  #   x-swagger-router-controller: listening_part1
  #   get:
  #     description: Returns this question by id record
  #     operationId: getQuestionById
  #     tags:
  #       - listeningQuestionPart1
  #     security:
  #       - auth0: []
  #     parameters:
  #       - in: path
  #         name: questionId
  #         type: string
  #         required: true
  #         description: id question
  #     responses:
  #       "200":
  #         description: Return the question you request
  #         schema:
  #           properties:
  #             _id:
  #               type: integer
  #             image_link:
  #               type: string
  #             answers:
  #               type: object
  #               properties:
  #                 optA:
  #                   type: string
  #                 optB:
  #                   type: string
  #                 optC:
  #                   type: string
  #                 optD:
  #                   type: string
  #             right_answer: 
  #               type: string
  #             explain:
  #               type: string      
  #             level: 
  #               type: integer
  #             part: 
  #               type: integer
  #           example: #sample object
  #             id: 5ca37b32d7e9b81653ad1dc9
  #             image_link: pulic/image/part1/question_image1
  #             answers: 
  #               optA: public/audio/part1/question_audio1
  #               optB: public/audio/part1/question_audio2
  #               optC: public/audio/part1/question_audio3
  #               optD: public/audio/part1/question_audio4
  #             right_answer: optA
  #             explain: No Explain
  #             level: 1
  #             part: 1
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #   put:
  #     tags:
  #       - listeningQuestionPart1
  #     description: admin has logged in, and update content of question.
  #     operationId: updateQuestion
  #     security:
  #       - auth0: []
  #     parameters:
  #       - in: path
  #         name: questionId
  #         type: string
  #         required: true
  #       - in: body
  #         name: body
  #         description: Add field you need update in this question.
  #         schema:
  #           $ref: '#/definitions/updateListeningQuestionPart1'     # <----------
  #     responses:
  #       "200":
  #         description: Return a question object has updated in DB
  #         schema:
  #           type: object
  #           properties:
  #             _id:
  #               type: integer
  #             image_link:
  #               type: string
  #             answers:
  #               type: object
  #               properties:
  #                 optA:
  #                   type: string
  #                 optB:
  #                   type: string
  #                 optC:
  #                   type: string
  #                 optD:
  #                   type: string
  #             right_answer: 
  #               type: string
  #             explain:
  #               type: string      
  #             level: 
  #               type: integer
  #             part: 
  #               type: integer
  #           example: #sample object
  #             id: 5ca37b32d7e9b81653ad1dc9
  #             image_link: pulic/image/part1/question_image1
  #             answers: 
  #               optA: public/audio/part1/question_audio1
  #               optB: public/audio/part1/question_audio2
  #               optC: public/audio/part1/question_audio3
  #               optD: public/audio/part1/question_audio4
  #             right_answer: optA
  #             explain: No Explain
  #             level: 1
  #             part: 1
  #       "401":
  #         description: Import Fail
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  #       default:
  #         description: Import Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
definitions:
  ErrorResponse:
    required:
      - messageError
    properties:
      messageError:
        type: string
  MessageResp:
    type: object
    required: 
      - success
    properties:
      success:
        type: boolean
      message:
        type: string
      value:
        type: object
  ImportBlankQuestion:
    type: object
    required:
      - question_content
      - answers
      - right_answer
      - explain
      - level
      - part
    properties:
      question_content:
        type: string
      answers:
        type: object
        properties:
          optA:
            type: string
          optB:
            type: string
          optC:
            type: string
          optD:
            type: string
      right_answer: 
        type: string
      explain:
        type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      question_content: This is __ new app for practise toeic.
      answers:
          optA: a
          optB: an
          optC: one
          optD: two
      right_answer: optA
      explain: We need a article in front of Noun
      level: 1
      part: 5
  ImportParagraphQuestionPart6:
    type: object
    required:
      - blank_paragraph
      - list_options
      - list_right_answers
      - list_explains
      - level
      - part
    properties:
      blank_paragraph:
        type: string
      list_options:
        type: array
        items:
          type: object
          properties:
            optA:
              type: string
            optB:
              type: string
            optC:
              type: string
            optD:
              type: string
      list_right_answers:
        type: array
        items:
          type: string
      list_explains:
        type: array
        items:
          type: string
      level:
        type: integer
      part:
        type: integer
    example: #sample object
      blank_paragraph: This is __ new app __ practise toeic.
      list_options: [
        { optA: a, optB: an, optC: one, optD: two},
        { optA: to, optB: for, optC: the, optD: have},
      ]
      list_right_answers: [
        "optA",
        "optB",
      ]
      list_explains: [
        "We need a article in front of Noun",
        "We need a article in front of Noun",
      ]
      level: 1
      part: 6
  ImportParagraphPart7:
    type: object
    required:
      - paragraphs
      - level
      - part
    properties:
      paragraphs:
        type: array
        items:
          type: string
      level:
        type: integer
      part:
        type: integer
    example: #sample object
      paragraphs: [
        "More than 50,000 electronics retailers and distributors are expected at the McCormick Convention Center in Chicago starting next Saturday. Some 1,300 manufacturers from more than 35 countries will exhibit their latest high-technology equipment, including industrial equipment, office machines, and household appliances. 
        The new products won't appear on retailers' shelves until next fall, but show attendees will be able to purchase them during the show at special prices.
        Highlights of the show include the following:
        1. Demonstrations of robots designed for household use. Watch robots perform everyday household chores. Each day, models from a different group of manufacturers will be shown. Hall of Industry, 3:00-5.00 P.M. daily.",
      ]
      level: 1
      part: 7
  ImportQuestionPart7:
    type: object
    required:
      - question_content
      - answers
      - right_answer
      - level
      - part
      - id_paragraph
    properties:
      question_content:
        type: string
      answers:
        type: object
        properties:
          optA:
            type: string
          optB:
            type: string
          optC:
            type: string
          optD:
            type: string
      right_answer: 
        type: string
      explain:
        type: string      
      level: 
        type: integer
      part: 
        type: integer
      id_paragraph:
        type: string
    example: #sample object
      question_content: What is the main topic of the press release ?
      answers:
          optA: The McCormick Convention Center
          optB: Chicago's convention centers 
          optC: Electronics retailers
          optD: The Summer Consumer Electronics Show
      right_answer: optA
      level: 1
      part: 7
      id_paragraph: 5c9c86aef41bf82ed47ac679
  ImportListeningQuestionPart1:
    type: object
    required:
      - image_link
      - answers
      - right_answer
      - explain
      - level
      - part
    properties:
      image_link:
        type: string
      answers:
        type: object
        properties:
          optA:
            type: string
          optB:
            type: string
          optC:
            type: string
          optD:
            type: string
      right_answer: 
        type: string
      explain:
        type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      image_link: pulic/image/part1/question_image1
      answers:
          optA: public/audio/part1/question_audio1
          optB: public/audio/part1/question_audio2
          optC: public/audio/part1/question_audio3
          optD: public/audio/part1/question_audio4
      right_answer: optA
      explain: No Explain
      level: 1
      part: 1
  updateListeningQuestionPart1:
    type: object
    properties:
      answers:
        type: object
        properties:
          optA:
            type: string
          optC:
            type: string
    example: #sample object
      answers:
          optA: public/audio/part1/updated
          optC: public/audio/part1/updated
  ImportListeningQuestionPart2:
    type: object
    required:
      - audio_link
      - answers
      - right_answer
      - level
      - part
    properties:
      audio_link:
        type: string
      answers:
        type: object
        properties:
          optA:
            type: string
          optB:
            type: string
          optC:
            type: string
          optD:
            type: string
      right_answer: 
        type: string
      explain:
        type: string      
      level: 
        type: integer
      part: 
        type: integer
    example: #sample object
      audio_link: pulic/audio/part2/question_audio2
      answers:
          optA: public/audio/part2/question_audio1
          optB: public/audio/part2/question_audio2
          optC: public/audio/part2/question_audio3
          optD: public/audio/part2/question_audio4
      right_answer: optA
      explain: Can be null
      level: 1
      part: 1